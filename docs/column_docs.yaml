columns:
  - name: MapValues
    title: Maps the values in one column to values in another
    examples:
      - desc: A simple mapping
        columns_yaml: |
          name: mytbl
          rows: 5
          columns:
            - col: currency Selection String
              values:
                - EUR
                - USD
                - GBP
            - name: symbol
              column_type: MapValues
              source_column: currency
              values:
                EUR: €
                USD: $
                GBP: £
  - name: Map
    title: Map columns create a record style field from other fields
    examples:
      - desc: You can create a Map field by specifing sub `columns:`. Note that the intermediate format here is a python dict and so it renders with single quotes.
        columns_yaml: |
          name: mytbl
          rows: 5
          columns:
            - col: mymap Map
              columns:
                - col: id Random Int 100 300
                - col: name Random String 2 5
      
      - desc: "If you want a valid json field specify `json: True`."
        columns_yaml: |
          name: mytbl
          rows: 5
          columns:
            - col: mymap Map
              json: True
              columns:
                - col: id Random Int 100 300
                - col: name Random String 2 5
      
      - desc: "Similarly you can nest to any depth by adding Map columns within Map columns."
        columns_yaml: |
          name: mytbl
          rows: 5
          columns:
            - col: mymap Map
              json: True
              columns:
                - col: id Random Int 100 300
                - col: nestedmap Map
                  columns:
                    - col: balance Sequential Float 5.4 1.15
                    - col: status Selection String
                      values:
                        - active
                        - inactive
          
  - name: Selection
    title: Generates columns by selecting random values
    desc: >
      A selection column
    examples:
      - desc: A simple Selection column fills a column with a random selection from the provided `values`.
        column_yaml: |
          name: simple_selection
          column_type: Selection
          values: 
            - first
            - second

      - desc: You can apply weighting to the provided `values` to make some more likely to be selected. In this example USD is 10 times more likely than GBP and EUR is 3 times more likely than GBP. A specific weighting is not needed for GBP since it defaults to 1.
        column_yaml: |
          name: weighted_selection
          column_type: Selection
          values: 
            - USD
            - EUR
            - GBP
          weights:
            - 10
            - 3


  - name: Random
    title: Generates columns of random data
    desc: |+
      A Random column
    examples:
      - desc: A Random column generates random values between `min:` and `max:`.
        column_yaml: |
          name: simple_random_int
          column_type: Random
          data_type: Int
          min: 5
          max: 200

      - desc: You can generate random timestamps as well.
        column_yaml: |
          name: event_time
          column_type: Random
          data_type: Timestamp
          min: 2022-01-01
          max: 2022-01-02 12:00:00
      
      - desc: Or random strings, where min and max are the length of the string.
        column_yaml: |
          name: message_id
          column_type: Random
          data_type: String
          min: 4
          max: 12

  - name: Sequential
    title: Generates a column by incrementing a field from a `start:` by a `step:` for each row.
    examples:
      - desc: A simple Sequential column can be used for generating incrementing Ids.
        column_yaml: |
          name: id
          column_type: Sequential
          data_type: Int
          start: 1
          step: 1
      - desc: They can also be used for timestamps and can be written in the following concise syntax.
        column_yaml: |
          col: event_time Sequential Timestamp "1999-12-31 23:56:29" 1min45S


  - name: Fixed
    title: Generates a column with a single fixed value
    examples:
      - desc: 
        column_yaml: |
          name: currency
          column_type: Fixed
          value: BTC

  - name: Empty
    title: Generates and empty (null) column of data
    examples:
      - desc: A simple empty column
        column_yaml: |
          name: pending_balance
          column_type: Empty
          data_type: Float

  - name: Series
    title: Repeats a series of values to fill a column
    examples:
      - desc: A simple series
        column_yaml: |
          name: group
          column_type: Series
          values:
            - A
            - B
          